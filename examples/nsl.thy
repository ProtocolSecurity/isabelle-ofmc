chapter {* Analysing NSL *}
(* *********************************** 
   This file is automatically generated from the AnB file "AnB/nsl.AnB".
   Backend: Open Source Fixedpoint Model Checker version 2009c
************************************ *)

theory
     "nsl"
 imports
   "../src/ofmc"
begin



section {* Protocol Model (NSL) *}
datatype Role = rA | rB

datatype Purpose = purposeNI | purposeNA | purposeNB
datatype Agent = honest nat
               | dishonest nat

datatype Nonce = "ni" "nat"
 | "absNA" "Msg" "nat"
 | "absNB" "Msg" "nat"
 | "NI"
 | "NA"
 | "NB"
       and Msg  = Nonce   "Nonce" 
          | Agent  "Agent"     
          | Purpose "Purpose"
          | pair  "Msg*Msg"    
          | scrypt "Msg*Msg"   
          | crypt  "Msg*Msg"   
          | inv    "Msg"       
          | SID    "nat"        
          | Step   "nat"         
          | authentication 
          | secrecy 
(* SymKeys *)
          | SymKey "Msg"
(* Functions *)
          | "pk" "Msg"

    datatype Fact = Iknows Msg
                  | State "Role * (Msg list)"
                  | Secret "Msg * Msg"
                  | Attack "Msg"
                  | Witness "Msg * Msg * Msg * Msg"
                  | Request "Msg * Msg * Msg * Msg * Msg"




section {* Inductive Protocol Definition (NSL) *}
inductive_set
  NSL::"Fact list set"
where
   init_0: "[ Iknows(Nonce((ni Abs_NI)))] : NSL"
 | init_1: "[ Iknows(Agent(dishonest(i)))] : NSL"
 | init_2: "[ State(rA, [Agent(honest(a)), Step(0), Agent(dishonest(i)), inv(pk(Agent(honest(a)))), SID(sid)] )] : NSL"
 | init_3: "[ State(rA, [Agent(honest(a)), Step(0), Agent(honest(a)), inv(pk(Agent(honest(a)))), SID(sid)] )] : NSL"
 | init_4: "[ Iknows(Step(0))] : NSL"
 | init_5: "[ Iknows(inv(pk(Agent(dishonest(i)))))] : NSL"
 | init_6: "[ Iknows(SID(sid))] : NSL"
 | init_7: "[ Iknows(Agent(honest(a)))] : NSL"
 | init_8: "[ State(rB, [Agent(honest(a)), Step(0), inv(pk(Agent(honest(a)))), SID(sid)] )] : NSL"
 | rule_0:  "[| t :NSL;
   Iknows(crypt(K, M)) : (set t);
   Iknows(inv(K)) : (set t)|] 
 ==> 
((Iknows(M))
  #t) : NSL"
 | rule_1:  "[| t :NSL;
   Iknows(crypt(inv(K), M)) : (set t);
   Iknows(K) : (set t)|] 
 ==> 
((Iknows(M))
  #t) : NSL"
 | rule_2:  "[| t :NSL;
   Iknows(scrypt(K, M)) : (set t);
   Iknows(K) : (set t)|] 
 ==> 
((Iknows(M))
  #t) : NSL"
 | rule_3:  "[| t :NSL;
   Iknows(pair(M1, M2)) : (set t)|] 
 ==> 
((Iknows(M1))
  #(Iknows(M2))
  #t) : NSL"
 | rule_4:  "[| t :NSL;
   Secret(M, Agent(honest(a))) : (set t);
   Iknows(M) : (set t)|] 
 ==> 
((Attack(pair(secrecy, M)))
  #t) : NSL"
 | rule_5:  "[| t :NSL;
   Request(A, B, Purpose(purposeNA), M, SID(sid)) : (set t);
   ~ ( ? i . 
   B = Agent(dishonest(i)));
   ~ ( ? B A Abs_NA . 
   M = Nonce((absNA(pair(B, A)) Abs_NA)))|] 
 ==> 
((Attack(pair(authentication, pair(A, pair(B, M)))))
  #t) : NSL"
 | rule_6:  "[| t :NSL;
   Request(A, B, Purpose(purposeNB), M, SID(sid)) : (set t);
   ~ ( ? i . 
   B = Agent(dishonest(i)));
   ~ ( ? B A Arg1 Abs_NB . 
   M = Nonce((absNB(pair(B, pair(A, Arg1))) Abs_NB)))|] 
 ==> 
((Attack(pair(authentication, pair(A, pair(B, M)))))
  #t) : NSL"
 | rule_7:  "[| t :NSL;
   State(rA, [Agent(A), Step(0), Agent(B), inv(pk(Agent(A))), SID(sid)] ) : (set t)|] 
 ==> 
((Secret(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(B)))
  #(Witness(Agent(A), Agent(B), Purpose(purposeNA), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA))))
  #(State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A)))))
  #t) : NSL"
 | rule_8:  "[| t :NSL;
   State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : (set t);
   Iknows(crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A)))) : (set t)|] 
 ==> 
((Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(A)))
  #(Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB))))
  #(State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B)))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B))))))
  #t) : NSL"
 | rule_9:  "[| t :NSL;
   State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : (set t);
   Iknows(pk(Agent(B))) : (set t);
   Iknows(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA))) : (set t);
   Iknows(Agent(A)) : (set t)|] 
 ==> 
((Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(A)))
  #(Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB))))
  #(State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B)))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B))))))
  #t) : NSL"
 | rule_10:  "[| t :NSL;
   State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : (set t);
   Iknows(Agent(B)) : (set t);
   Iknows(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA))) : (set t);
   Iknows(Agent(A)) : (set t)|] 
 ==> 
((Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(A)))
  #(Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB))))
  #(State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B)))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B))))))
  #t) : NSL"
 | rule_11:  "[| t :NSL;
   State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : (set t);
   Iknows(crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A)))) : (set t);
   ~ ( ? A B Abs_NA . 
   Nonce(NA) = Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)))|] 
 ==> 
((Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(A)))
  #(Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB))))
  #(State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B)))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B))))))
  #t) : NSL"
 | rule_12:  "[| t :NSL;
   State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : (set t);
   Iknows(pk(Agent(B))) : (set t);
   Iknows(Nonce(NA)) : (set t);
   Iknows(Agent(A)) : (set t);
   ~ ( ? A B Abs_NA . 
   Nonce(NA) = Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)))|] 
 ==> 
((Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(A)))
  #(Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB))))
  #(State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B)))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B))))))
  #t) : NSL"
 | rule_13:  "[| t :NSL;
   State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : (set t);
   Iknows(Agent(B)) : (set t);
   Iknows(Nonce(NA)) : (set t);
   Iknows(Agent(A)) : (set t);
   ~ ( ? A B Abs_NA . 
   Nonce(NA) = Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)))|] 
 ==> 
((Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(A)))
  #(Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB))))
  #(State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B)))), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B))))))
  #t) : NSL"
 | rule_14:  "[| t :NSL;
   State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), SID(sid)] ) : (set t);
   Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B))))) : (set t)|] 
 ==> 
((Request(Agent(A), Agent(B), Purpose(purposeNB), Nonce(NB), SID(sid)))
  #(State(rA, [Agent(A), Step(2), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(B)), Nonce(NB))))
  #t) : NSL"
 | rule_15:  "[| t :NSL;
   State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), SID(sid)] ) : (set t);
   Iknows(pk(Agent(A))) : (set t);
   Iknows(Nonce(NA)) : (set t);
   Iknows(Nonce(NB)) : (set t);
   Iknows(Agent(B)) : (set t)|] 
 ==> 
((Request(Agent(A), Agent(B), Purpose(purposeNB), Nonce(NB), SID(sid)))
  #(State(rA, [Agent(A), Step(2), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(B)), Nonce(NB))))
  #t) : NSL"
 | rule_16:  "[| t :NSL;
   State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), SID(sid)] ) : (set t);
   Iknows(Agent(A)) : (set t);
   Iknows(Nonce(NA)) : (set t);
   Iknows(Nonce(NB)) : (set t);
   Iknows(Agent(B)) : (set t)|] 
 ==> 
((Request(Agent(A), Agent(B), Purpose(purposeNB), Nonce(NB), SID(sid)))
  #(State(rA, [Agent(A), Step(2), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ))
  #(Iknows(crypt(pk(Agent(B)), Nonce(NB))))
  #t) : NSL"
 | rule_17:  "[| t :NSL;
   State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), SID(sid)] ) : (set t);
   Iknows(crypt(pk(Agent(B)), Nonce(NB))) : (set t)|] 
 ==> 
((Request(Agent(B), Agent(A), Purpose(purposeNA), Nonce(NA), SID(sid)))
  #(State(rB, [Agent(B), Step(2), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ))
  #t) : NSL"
 | rule_18:  "[| t :NSL;
   State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), SID(sid)] ) : (set t);
   Iknows(pk(Agent(B))) : (set t);
   Iknows(Nonce(NB)) : (set t)|] 
 ==> 
((Request(Agent(B), Agent(A), Purpose(purposeNA), Nonce(NA), SID(sid)))
  #(State(rB, [Agent(B), Step(2), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ))
  #t) : NSL"
 | rule_19:  "[| t :NSL;
   State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), SID(sid)] ) : (set t);
   Iknows(Agent(B)) : (set t);
   Iknows(Nonce(NB)) : (set t)|] 
 ==> 
((Request(Agent(B), Agent(A), Purpose(purposeNA), Nonce(NA), SID(sid)))
  #(State(rB, [Agent(B), Step(2), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ))
  #t) : NSL"


section {* Fixed-point Definition (NSL) *}
definition
"NSL_fp = {m. ( ? Abs_NA3 Abs_NA4 Abs_NA5 i9 Abs_NI1 Abs_NI2 a11 a12 a13 a14 a15 a16 a17 a18 a19 Abs_NA1 Abs_NA2 a3 a4 i2 i3 a5 i4 Abs_NB2 i5 a6 i6 Abs_NB3 a7 i7 Abs_NB4 a8 a9 a10 i8 Abs_NB5 sid0 Abs_NI0 Abs_NA0 a0 i0 Abs_NB0 a1 i1 Abs_NB1 a2 .
   (m = Iknows(Nonce((ni Abs_NI0))))
 | (m = Iknows(Agent(dishonest(i0))))
 | (m = State(rA, [Agent(honest(a0)), Step(0), Agent(dishonest(i0)), inv(pk(Agent(honest(a1)))), SID(sid0)] ))
 | (m = State(rA, [Agent(honest(a0)), Step(0), Agent(honest(a1)), inv(pk(Agent(honest(a2)))), SID(sid0)] ))
 | (m = Iknows(Step(0)))
 | (m = Iknows(inv(pk(Agent(dishonest(i0))))))
 | (m = Iknows(SID(sid0)))
 | (m = Iknows(Agent(honest(a0))))
 | (m = State(rB, [Agent(honest(a0)), Step(0), inv(pk(Agent(honest(a1)))), SID(sid0)] ))
 | (m = Secret(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), Agent(dishonest(i1))))
 | (m = Witness(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNA), Nonce((absNA(pair(Agent(honest(a1)), Agent(dishonest(i1)))) Abs_NA0))))
 | (m = State(rA, [Agent(honest(a0)), Step(1), Agent(dishonest(i0)), inv(pk(Agent(honest(a1)))), Nonce((absNA(pair(Agent(honest(a2)), Agent(dishonest(i1)))) Abs_NA0)), crypt(pk(Agent(dishonest(i2))), pair(Nonce((absNA(pair(Agent(honest(a3)), Agent(dishonest(i3)))) Abs_NA1)), Agent(honest(a4)))), SID(sid0)] ))
 | (m = Secret(Nonce((absNA(pair(Agent(honest(a0)), Agent(honest(a1)))) Abs_NA0)), Agent(honest(a2))))
 | (m = Witness(Agent(honest(a0)), Agent(honest(a1)), Purpose(purposeNA), Nonce((absNA(pair(Agent(honest(a2)), Agent(honest(a3)))) Abs_NA0))))
 | (m = State(rA, [Agent(honest(a0)), Step(1), Agent(honest(a1)), inv(pk(Agent(honest(a2)))), Nonce((absNA(pair(Agent(honest(a3)), Agent(honest(a4)))) Abs_NA0)), crypt(pk(Agent(honest(a5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(honest(a7)))) Abs_NA1)), Agent(honest(a8)))), SID(sid0)] ))
 | (m = Secret(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(dishonest(i1))))
 | (m = Witness(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNB), Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0))))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(dishonest(i0)), Nonce((ni Abs_NI0)), crypt(pk(Agent(honest(a2))), pair(Nonce((ni Abs_NI1)), Agent(dishonest(i1)))), Nonce((absNB(pair(Agent(honest(a3)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB0)), crypt(pk(Agent(dishonest(i3))), pair(Nonce((ni Abs_NI2)), pair(Nonce((absNB(pair(Agent(honest(a4)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB1)), Agent(honest(a5))))), SID(sid0)] ))
 | (m = Secret(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(honest(a1)), Step(0)))) Abs_NB0)), Agent(honest(a2))))
 | (m = Witness(Agent(honest(a0)), Agent(honest(a1)), Purpose(purposeNB), Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(honest(a3)), Step(0)))) Abs_NB0))))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(honest(a2)), Nonce((ni Abs_NI0)), crypt(pk(Agent(honest(a3))), pair(Nonce((ni Abs_NI1)), Agent(honest(a4)))), Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(honest(a6)), Step(0)))) Abs_NB0)), crypt(pk(Agent(honest(a7))), pair(Nonce((ni Abs_NI2)), pair(Nonce((absNB(pair(Agent(honest(a8)), pair(Agent(honest(a9)), Step(0)))) Abs_NB1)), Agent(honest(a10))))), SID(sid0)] ))
 | (m = Iknows(crypt(pk(Agent(honest(a0))), pair(Nonce((ni Abs_NI0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(honest(a2)), Step(0)))) Abs_NB0)), Agent(honest(a3)))))))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), pair(Nonce((ni Abs_NI0)), pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), Agent(honest(a1)))))))
 | (m = Iknows(crypt(pk(Agent(honest(a0))), pair(Nonce((absNA(pair(Agent(honest(a1)), Agent(honest(a2)))) Abs_NA0)), Agent(honest(a3))))))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i1)))) Abs_NA0)), Agent(honest(a1))))))
 | (m = Iknows(pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((ni Abs_NI0)), pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1))))))
 | (m = Secret(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(honest(a1)), Step(1)))) Abs_NB0)), Agent(honest(a2))))
 | (m = Witness(Agent(honest(a0)), Agent(honest(a1)), Purpose(purposeNB), Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(honest(a3)), Step(1)))) Abs_NB0))))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(honest(a2)), Nonce((absNA(pair(Agent(honest(a3)), Agent(honest(a4)))) Abs_NA0)), crypt(pk(Agent(honest(a5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(honest(a7)))) Abs_NA1)), Agent(honest(a8)))), Nonce((absNB(pair(Agent(honest(a9)), pair(Agent(honest(a10)), Step(1)))) Abs_NB0)), crypt(pk(Agent(honest(a11))), pair(Nonce((absNA(pair(Agent(honest(a12)), Agent(honest(a13)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a14)), pair(Agent(honest(a15)), Step(1)))) Abs_NB1)), Agent(honest(a16))))), SID(sid0)] ))
 | (m = Iknows(crypt(pk(Agent(honest(a0))), pair(Nonce((absNA(pair(Agent(honest(a1)), Agent(honest(a2)))) Abs_NA0)), pair(Nonce((absNB(pair(Agent(honest(a3)), pair(Agent(honest(a4)), Step(1)))) Abs_NB0)), Agent(honest(a5)))))))
 | (m = Iknows(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0))))
 | (m = Iknows(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0))))
 | (m = Iknows(pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((ni Abs_NI0)), pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1))))))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(dishonest(i0)), Nonce((absNA(pair(Agent(honest(a2)), Agent(dishonest(i1)))) Abs_NA0)), crypt(pk(Agent(honest(a3))), pair(Nonce((absNA(pair(Agent(honest(a4)), Agent(dishonest(i2)))) Abs_NA1)), Agent(dishonest(i3)))), Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB0)), crypt(pk(Agent(dishonest(i5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(dishonest(i6)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(dishonest(i7)), Step(0)))) Abs_NB1)), Agent(honest(a8))))), SID(sid0)] ))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(honest(a2)), Nonce((absNA(pair(Agent(honest(a3)), Agent(dishonest(i0)))) Abs_NA0)), crypt(pk(Agent(honest(a4))), pair(Nonce((absNA(pair(Agent(honest(a5)), Agent(dishonest(i1)))) Abs_NA1)), Agent(honest(a6)))), Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(honest(a8)), Step(0)))) Abs_NB0)), crypt(pk(Agent(honest(a9))), pair(Nonce((absNA(pair(Agent(honest(a10)), Agent(dishonest(i2)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a11)), pair(Agent(honest(a12)), Step(0)))) Abs_NB1)), Agent(honest(a13))))), SID(sid0)] ))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(dishonest(i0)), Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), crypt(pk(Agent(honest(a3))), pair(Nonce((absNB(pair(Agent(honest(a4)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB1)), Agent(dishonest(i3)))), Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB2)), crypt(pk(Agent(dishonest(i5))), pair(Nonce((absNB(pair(Agent(honest(a6)), pair(Agent(dishonest(i6)), Step(0)))) Abs_NB3)), pair(Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(dishonest(i7)), Step(0)))) Abs_NB4)), Agent(honest(a8))))), SID(sid0)] ))
 | (m = State(rB, [Agent(honest(a0)), Step(1), inv(pk(Agent(honest(a1)))), Agent(honest(a2)), Nonce((absNB(pair(Agent(honest(a3)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), crypt(pk(Agent(honest(a4))), pair(Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB1)), Agent(honest(a6)))), Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(honest(a8)), Step(0)))) Abs_NB2)), crypt(pk(Agent(honest(a9))), pair(Nonce((absNB(pair(Agent(honest(a10)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB3)), pair(Nonce((absNB(pair(Agent(honest(a11)), pair(Agent(honest(a12)), Step(0)))) Abs_NB4)), Agent(honest(a13))))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(honest(a1)), Purpose(purposeNB), Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(honest(a3)), Step(1)))) Abs_NB0)), SID(sid0)))
 | (m = State(rA, [Agent(honest(a0)), Step(2), Agent(honest(a1)), inv(pk(Agent(honest(a2)))), Nonce((absNA(pair(Agent(honest(a3)), Agent(honest(a4)))) Abs_NA0)), crypt(pk(Agent(honest(a5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(honest(a7)))) Abs_NA1)), Agent(honest(a8)))), Nonce((absNB(pair(Agent(honest(a9)), pair(Agent(honest(a10)), Step(1)))) Abs_NB0)), crypt(pk(Agent(honest(a11))), pair(Nonce((absNA(pair(Agent(honest(a12)), Agent(honest(a13)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a14)), pair(Agent(honest(a15)), Step(1)))) Abs_NB1)), Agent(honest(a16))))), crypt(pk(Agent(honest(a17))), Nonce((absNB(pair(Agent(honest(a18)), pair(Agent(honest(a19)), Step(1)))) Abs_NB2))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNB), Nonce((absNA(pair(Agent(honest(a1)), Agent(dishonest(i1)))) Abs_NA0)), SID(sid0)))
 | (m = State(rA, [Agent(honest(a0)), Step(2), Agent(dishonest(i0)), inv(pk(Agent(honest(a1)))), Nonce((absNA(pair(Agent(honest(a2)), Agent(dishonest(i1)))) Abs_NA0)), crypt(pk(Agent(dishonest(i2))), pair(Nonce((absNA(pair(Agent(honest(a3)), Agent(dishonest(i3)))) Abs_NA1)), Agent(honest(a4)))), Nonce((absNA(pair(Agent(honest(a5)), Agent(dishonest(i4)))) Abs_NA2)), crypt(pk(Agent(honest(a6))), pair(Nonce((absNA(pair(Agent(honest(a7)), Agent(dishonest(i5)))) Abs_NA3)), pair(Nonce((absNA(pair(Agent(honest(a8)), Agent(dishonest(i6)))) Abs_NA4)), Agent(dishonest(i7))))), crypt(pk(Agent(dishonest(i8))), Nonce((absNA(pair(Agent(honest(a9)), Agent(dishonest(i9)))) Abs_NA5))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNB), Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), SID(sid0)))
 | (m = State(rA, [Agent(honest(a0)), Step(2), Agent(dishonest(i0)), inv(pk(Agent(honest(a1)))), Nonce((absNA(pair(Agent(honest(a2)), Agent(dishonest(i1)))) Abs_NA0)), crypt(pk(Agent(dishonest(i2))), pair(Nonce((absNA(pair(Agent(honest(a3)), Agent(dishonest(i3)))) Abs_NA1)), Agent(honest(a4)))), Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB0)), crypt(pk(Agent(honest(a6))), pair(Nonce((absNA(pair(Agent(honest(a7)), Agent(dishonest(i5)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a8)), pair(Agent(dishonest(i6)), Step(0)))) Abs_NB1)), Agent(dishonest(i7))))), crypt(pk(Agent(dishonest(i8))), Nonce((absNB(pair(Agent(honest(a9)), pair(Agent(dishonest(i9)), Step(0)))) Abs_NB2))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNB), Nonce((ni Abs_NI0)), SID(sid0)))
 | (m = State(rA, [Agent(honest(a0)), Step(2), Agent(dishonest(i0)), inv(pk(Agent(honest(a1)))), Nonce((absNA(pair(Agent(honest(a2)), Agent(dishonest(i1)))) Abs_NA0)), crypt(pk(Agent(dishonest(i2))), pair(Nonce((absNA(pair(Agent(honest(a3)), Agent(dishonest(i3)))) Abs_NA1)), Agent(honest(a4)))), Nonce((ni Abs_NI0)), crypt(pk(Agent(honest(a5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(dishonest(i4)))) Abs_NA2)), pair(Nonce((ni Abs_NI1)), Agent(dishonest(i5))))), crypt(pk(Agent(dishonest(i6))), Nonce((ni Abs_NI2))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNA), Nonce((ni Abs_NI0)), SID(sid0)))
 | (m = State(rB, [Agent(honest(a0)), Step(2), inv(pk(Agent(honest(a1)))), Agent(dishonest(i0)), Nonce((ni Abs_NI0)), crypt(pk(Agent(honest(a2))), pair(Nonce((ni Abs_NI1)), Agent(dishonest(i1)))), Nonce((absNB(pair(Agent(honest(a3)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB0)), crypt(pk(Agent(dishonest(i3))), pair(Nonce((ni Abs_NI2)), pair(Nonce((absNB(pair(Agent(honest(a4)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB1)), Agent(honest(a5))))), crypt(pk(Agent(honest(a6))), Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(dishonest(i5)), Step(0)))) Abs_NB2))), SID(sid0)] ))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), Nonce((ni Abs_NI0)))))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)))))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i1)))) Abs_NA0)))))
 | (m = Iknows(crypt(pk(Agent(honest(a0))), Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(honest(a2)), Step(1)))) Abs_NB0)))))
 | (m = Iknows(crypt(pk(Agent(honest(a0))), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), pair(Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(honest(a3)), Step(0)))) Abs_NB1)), Agent(honest(a4)))))))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB1)), Agent(honest(a2)))))))
 | (m = Iknows(crypt(pk(Agent(honest(a0))), pair(Nonce((absNA(pair(Agent(honest(a1)), Agent(dishonest(i0)))) Abs_NA0)), pair(Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(honest(a3)), Step(0)))) Abs_NB0)), Agent(honest(a4)))))))
 | (m = Iknows(crypt(pk(Agent(dishonest(i0))), pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i1)))) Abs_NA0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB0)), Agent(honest(a2)))))))
 | (m = Iknows(pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((ni Abs_NI0)), pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1))))))
 | (m = Iknows(pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), Agent(honest(a2))))))
 | (m = Iknows(pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB1)), Agent(honest(a2))))))
 | (m = Request(Agent(honest(a0)), Agent(honest(a1)), Purpose(purposeNA), Nonce((absNA(pair(Agent(honest(a2)), Agent(honest(a3)))) Abs_NA0)), SID(sid0)))
 | (m = State(rB, [Agent(honest(a0)), Step(2), inv(pk(Agent(honest(a1)))), Agent(honest(a2)), Nonce((absNA(pair(Agent(honest(a3)), Agent(honest(a4)))) Abs_NA0)), crypt(pk(Agent(honest(a5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(honest(a7)))) Abs_NA1)), Agent(honest(a8)))), Nonce((absNB(pair(Agent(honest(a9)), pair(Agent(honest(a10)), Step(1)))) Abs_NB0)), crypt(pk(Agent(honest(a11))), pair(Nonce((absNA(pair(Agent(honest(a12)), Agent(honest(a13)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a14)), pair(Agent(honest(a15)), Step(1)))) Abs_NB1)), Agent(honest(a16))))), crypt(pk(Agent(honest(a17))), Nonce((absNB(pair(Agent(honest(a18)), pair(Agent(honest(a19)), Step(1)))) Abs_NB2))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNA), Nonce((absNA(pair(Agent(honest(a1)), Agent(dishonest(i1)))) Abs_NA0)), SID(sid0)))
 | (m = State(rB, [Agent(honest(a0)), Step(2), inv(pk(Agent(honest(a1)))), Agent(dishonest(i0)), Nonce((absNA(pair(Agent(honest(a2)), Agent(dishonest(i1)))) Abs_NA0)), crypt(pk(Agent(honest(a3))), pair(Nonce((absNA(pair(Agent(honest(a4)), Agent(dishonest(i2)))) Abs_NA1)), Agent(dishonest(i3)))), Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB0)), crypt(pk(Agent(dishonest(i5))), pair(Nonce((absNA(pair(Agent(honest(a6)), Agent(dishonest(i6)))) Abs_NA2)), pair(Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(dishonest(i7)), Step(0)))) Abs_NB1)), Agent(honest(a8))))), crypt(pk(Agent(honest(a9))), Nonce((absNB(pair(Agent(honest(a10)), pair(Agent(dishonest(i8)), Step(0)))) Abs_NB2))), SID(sid0)] ))
 | (m = Request(Agent(honest(a0)), Agent(dishonest(i0)), Purpose(purposeNA), Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), SID(sid0)))
 | (m = State(rB, [Agent(honest(a0)), Step(2), inv(pk(Agent(honest(a1)))), Agent(dishonest(i0)), Nonce((absNB(pair(Agent(honest(a2)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), crypt(pk(Agent(honest(a3))), pair(Nonce((absNB(pair(Agent(honest(a4)), pair(Agent(dishonest(i2)), Step(0)))) Abs_NB1)), Agent(dishonest(i3)))), Nonce((absNB(pair(Agent(honest(a5)), pair(Agent(dishonest(i4)), Step(0)))) Abs_NB2)), crypt(pk(Agent(dishonest(i5))), pair(Nonce((absNB(pair(Agent(honest(a6)), pair(Agent(dishonest(i6)), Step(0)))) Abs_NB3)), pair(Nonce((absNB(pair(Agent(honest(a7)), pair(Agent(dishonest(i7)), Step(0)))) Abs_NB4)), Agent(honest(a8))))), crypt(pk(Agent(honest(a9))), Nonce((absNB(pair(Agent(honest(a10)), pair(Agent(dishonest(i8)), Step(0)))) Abs_NB5))), SID(sid0)] ))
 | (m = Iknows(pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1)))))
 | (m = Iknows(pair(Nonce((ni Abs_NI0)), pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), Agent(honest(a1))))))
 | (m = Iknows(pair(Nonce((absNA(pair(Agent(honest(a0)), Agent(dishonest(i0)))) Abs_NA0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB0)), Agent(honest(a2))))))
 | (m = Iknows(pair(Nonce((absNB(pair(Agent(honest(a0)), pair(Agent(dishonest(i0)), Step(0)))) Abs_NB0)), pair(Nonce((absNB(pair(Agent(honest(a1)), pair(Agent(dishonest(i1)), Step(0)))) Abs_NB1)), Agent(honest(a2))))))
)}"


section {* Checking Fixed-point (NSL) *}
lemma fp_attack_free: "~ (Attack m : NSL_fp)"
  by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_0: "Iknows(Nonce((ni Abs_NI))) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_1: "Iknows(Agent(dishonest(i))) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_2: "State(rA, [Agent(honest(a)), Step(0), Agent(dishonest(i)), inv(pk(Agent(honest(a)))), SID(sid)] ) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_3: "State(rA, [Agent(honest(a)), Step(0), Agent(honest(a)), inv(pk(Agent(honest(a)))), SID(sid)] ) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_4: "Iknows(Step(0)) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_5: "Iknows(inv(pk(Agent(dishonest(i))))) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_6: "Iknows(SID(sid)) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_7: "Iknows(Agent(honest(a))) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma init_8: "State(rB, [Agent(honest(a)), Step(0), inv(pk(Agent(honest(a)))), SID(sid)] ) : NSL_fp"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_0:  "[| 
  Iknows(crypt(K, M)) : NSL_fp;
 Iknows(inv(K)) : NSL_fp|] 
 ==> 
 (Iknows(M) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_1:  "[| 
  Iknows(crypt(inv(K), M)) : NSL_fp;
 Iknows(K) : NSL_fp|] 
 ==> 
 (Iknows(M) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_2:  "[| 
  Iknows(scrypt(K, M)) : NSL_fp;
 Iknows(K) : NSL_fp|] 
 ==> 
 (Iknows(M) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_3:  "[| 
  Iknows(pair(M1, M2)) : NSL_fp|] 
 ==> 
 (Iknows(M1) : NSL_fp) &
 (Iknows(M2) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_4:  "[| 
  Secret(M, Agent(honest(a))) : NSL_fp;
 Iknows(M) : NSL_fp|] 
 ==> 
 (Attack(pair(secrecy, M)) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_5:  "[| 
  Request(A, B, Purpose(purposeNA), M, SID(sid)) : NSL_fp;
 ~ ( ? i . 
   B = Agent(dishonest(i)));
 ~ ( ? B A Abs_NA . 
   M = Nonce((absNA(pair(B, A)) Abs_NA)))|] 
 ==> 
 (Attack(pair(authentication, pair(A, pair(B, M)))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_6:  "[| 
  Request(A, B, Purpose(purposeNB), M, SID(sid)) : NSL_fp;
 ~ ( ? i . 
   B = Agent(dishonest(i)));
 ~ ( ? B A Arg1 Abs_NB . 
   M = Nonce((absNB(pair(B, pair(A, Arg1))) Abs_NB)))|] 
 ==> 
 (Attack(pair(authentication, pair(A, pair(B, M)))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_7:  "[| 
  State(rA, [Agent(A), Step(0), Agent(B), inv(pk(Agent(A))), SID(sid)] ) : NSL_fp|] 
 ==> 
 (Secret(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(B)) : NSL_fp) &
 (Witness(Agent(A), Agent(B), Purpose(purposeNA), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA))) : NSL_fp) &
 (State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A)))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_8:  "[| 
  State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : NSL_fp;
 Iknows(crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A)))) : NSL_fp|] 
 ==> 
 (Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(A)) : NSL_fp) &
 (Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB))) : NSL_fp) &
 (State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B)))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B))))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_9:  "[| 
  State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : NSL_fp;
 Iknows(pk(Agent(B))) : NSL_fp;
 Iknows(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA))) : NSL_fp;
 Iknows(Agent(A)) : NSL_fp|] 
 ==> 
 (Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(A)) : NSL_fp) &
 (Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB))) : NSL_fp) &
 (State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B)))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B))))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_10:  "[| 
  State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : NSL_fp;
 Iknows(Agent(B)) : NSL_fp;
 Iknows(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA))) : NSL_fp;
 Iknows(Agent(A)) : NSL_fp|] 
 ==> 
 (Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(A)) : NSL_fp) &
 (Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB))) : NSL_fp) &
 (State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), crypt(pk(Agent(B)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B)))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(A)), pair(Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(1)))) Abs_NB)), Agent(B))))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_11:  "[| 
  State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : NSL_fp;
 Iknows(crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A)))) : NSL_fp;
 ~ ( ? A B Abs_NA . 
   Nonce(NA) = Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)))|] 
 ==> 
 (Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(A)) : NSL_fp) &
 (Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB))) : NSL_fp) &
 (State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B)))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B))))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_12:  "[| 
  State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : NSL_fp;
 Iknows(pk(Agent(B))) : NSL_fp;
 Iknows(Nonce(NA)) : NSL_fp;
 Iknows(Agent(A)) : NSL_fp;
 ~ ( ? A B Abs_NA . 
   Nonce(NA) = Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)))|] 
 ==> 
 (Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(A)) : NSL_fp) &
 (Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB))) : NSL_fp) &
 (State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B)))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B))))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_13:  "[| 
  State(rB, [Agent(B), Step(0), inv(pk(Agent(B))), SID(sid)] ) : NSL_fp;
 Iknows(Agent(B)) : NSL_fp;
 Iknows(Nonce(NA)) : NSL_fp;
 Iknows(Agent(A)) : NSL_fp;
 ~ ( ? A B Abs_NA . 
   Nonce(NA) = Nonce((absNA(pair(Agent(A), Agent(B))) Abs_NA)))|] 
 ==> 
 (Secret(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(A)) : NSL_fp) &
 (Witness(Agent(B), Agent(A), Purpose(purposeNB), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB))) : NSL_fp) &
 (State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B)))), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce((absNB(pair(Agent(B), pair(Agent(A), Step(0)))) Abs_NB)), Agent(B))))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_14:  "[| 
  State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), SID(sid)] ) : NSL_fp;
 Iknows(crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B))))) : NSL_fp|] 
 ==> 
 (Request(Agent(A), Agent(B), Purpose(purposeNB), Nonce(NB), SID(sid)) : NSL_fp) &
 (State(rA, [Agent(A), Step(2), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(B)), Nonce(NB))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_15:  "[| 
  State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), SID(sid)] ) : NSL_fp;
 Iknows(pk(Agent(A))) : NSL_fp;
 Iknows(Nonce(NA)) : NSL_fp;
 Iknows(Nonce(NB)) : NSL_fp;
 Iknows(Agent(B)) : NSL_fp|] 
 ==> 
 (Request(Agent(A), Agent(B), Purpose(purposeNB), Nonce(NB), SID(sid)) : NSL_fp) &
 (State(rA, [Agent(A), Step(2), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(B)), Nonce(NB))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_16:  "[| 
  State(rA, [Agent(A), Step(1), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), SID(sid)] ) : NSL_fp;
 Iknows(Agent(A)) : NSL_fp;
 Iknows(Nonce(NA)) : NSL_fp;
 Iknows(Nonce(NB)) : NSL_fp;
 Iknows(Agent(B)) : NSL_fp|] 
 ==> 
 (Request(Agent(A), Agent(B), Purpose(purposeNB), Nonce(NB), SID(sid)) : NSL_fp) &
 (State(rA, [Agent(A), Step(2), Agent(B), inv(pk(Agent(A))), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ) : NSL_fp) &
 (Iknows(crypt(pk(Agent(B)), Nonce(NB))) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_17:  "[| 
  State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), SID(sid)] ) : NSL_fp;
 Iknows(crypt(pk(Agent(B)), Nonce(NB))) : NSL_fp|] 
 ==> 
 (Request(Agent(B), Agent(A), Purpose(purposeNA), Nonce(NA), SID(sid)) : NSL_fp) &
 (State(rB, [Agent(B), Step(2), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_18:  "[| 
  State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), SID(sid)] ) : NSL_fp;
 Iknows(pk(Agent(B))) : NSL_fp;
 Iknows(Nonce(NB)) : NSL_fp|] 
 ==> 
 (Request(Agent(B), Agent(A), Purpose(purposeNA), Nonce(NA), SID(sid)) : NSL_fp) &
 (State(rB, [Agent(B), Step(2), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+

lemma rule_19:  "[| 
  State(rB, [Agent(B), Step(1), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), SID(sid)] ) : NSL_fp;
 Iknows(Agent(B)) : NSL_fp;
 Iknows(Nonce(NB)) : NSL_fp|] 
 ==> 
 (Request(Agent(B), Agent(A), Purpose(purposeNA), Nonce(NA), SID(sid)) : NSL_fp) &
 (State(rB, [Agent(B), Step(2), inv(pk(Agent(B))), Agent(A), Nonce(NA), crypt(pk(Agent(B)), pair(Nonce(NA), Agent(A))), Nonce(NB), crypt(pk(Agent(A)), pair(Nonce(NA), pair(Nonce(NB), Agent(B)))), crypt(pk(Agent(B)), Nonce(NB)), SID(sid)] ) : NSL_fp)"
by(simp only: NSL_fp_def, simp only: set2pred, simp, auto?)+



section {* Security Proof(s) (NSL) *}
lemma over_approx: "t :  NSL ==> (set t) <= NSL_fp"
  apply(rule NSL.induct, simp_all)
  apply(propagate_fp, cut_tac init_0, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_1, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_2, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_3, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_4, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_5, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_6, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_7, (assumption | simp)+)
  apply(propagate_fp, cut_tac init_8, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_0, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_1, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_2, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_3, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_4, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_5, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_6, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_7, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_8, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_9, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_10, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_11, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_12, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_13, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_14, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_15, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_16, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_17, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_18, (assumption | simp)+)
  apply(propagate_fp, cut_tac rule_19, (assumption | simp)+)
done



end (* theory *)
